<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resx="clr-namespace:ArchestrA.Apps.MPNZ.TitleBarApp.Properties">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <SolidColorBrush x:Key="LoginComboBoxBorderBrush" Color="#444" />

    <DataTemplate x:Key="CloseAppButtonDataTemplate">
        <Viewbox Width="25"
                 Height="{Binding Height,
                                  RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                 Mode=FindAncestor}}"
                 Stretch="Uniform">
            <Canvas Width="40" Height="40">
                <Path Data="M13.75 12.5c-0.69 0-1.25 0.56-1.25 1.25v17.5v1.25H15h7.5V30H15V15h5v3.75c0 0.69 0.56 1.25 1.25 1.25h7.3  c0.134 0.022 0.271 0.022 0.405 0H32.5v2.5H35v-3.75c0-0.69-0.56-1.25-1.25-1.25H30v-3.75c0-0.69-0.56-1.25-1.25-1.25h-7.5h-0.625  H13.75z"
                      Fill="{Binding (TextElement.Foreground),
                                     RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                    Mode=FindAncestor}}"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="0.25" />
                <Path Data="M3.75 2.5C3.06 2.5 2.5 3.06 2.5 3.75v17.5v1.25H5h7.5V20H5V5h5v3.75C10 9.44 10.56 10 11.25 10h7.3  c0.134 0.022 0.271 0.022 0.405 0H22.5v2.5H25V8.75c0-0.69-0.56-1.25-1.25-1.25H20V3.75c0-0.69-0.56-1.25-1.25-1.25h-7.5h-0.625  H3.75z"
                      Fill="{Binding (TextElement.Foreground),
                                     RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                    Mode=FindAncestor}}"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="0.25" />
                <Polygon Fill="{Binding (TextElement.Foreground),
                                        RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                       Mode=FindAncestor}}"
                         Points="27.134,25.366 25.366,27.134 30.732,32.5 25.366,37.866 27.134,39.634 32.5,34.268 37.866,39.634 39.634,37.866   34.268,32.5 39.634,27.134 37.866,25.366 32.5,30.732 "
                         Stroke="{Binding (TextElement.Foreground),
                                          RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                         Mode=FindAncestor}}"
                         StrokeThickness="0.25" />
                <Rectangle Canvas.Left="12.5"
                           Canvas.Top="5"
                           Width="5"
                           Height="2.5"
                           Fill="{Binding (TextElement.Foreground),
                                          RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                         Mode=FindAncestor}}"
                           Stroke="{Binding (TextElement.Foreground),
                                            RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                           Mode=FindAncestor}}"
                           StrokeThickness="0.25" />
                <Rectangle Canvas.Left="22.5"
                           Canvas.Top="15"
                           Width="5"
                           Height="2.5"
                           Fill="{Binding (TextElement.Foreground),
                                          RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                         Mode=FindAncestor}}"
                           Stroke="{Binding (TextElement.Foreground),
                                            RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                           Mode=FindAncestor}}"
                           StrokeThickness="0.25" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="CloseButtonDataTemplate">
        <Viewbox Width="25" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=ContentPresenter, Mode=FindAncestor}}">
            <Canvas Width="24" Height="24">
                <Path Width="14"
                      Height="14"
                      Data="M0,0 M0,8 M8,0 L0,8 M8,8 L0,0"
                      Stretch="Fill"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="2" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="MaximizeButtonDataTemplate">
        <Viewbox Width="25" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=ContentPresenter, Mode=FindAncestor}}">
            <Canvas Width="24" Height="24">
                <Path Width="14"
                      Height="14"
                      Data="M0,0 L9,0 M0,1 L9,1 M9,0 L9,9 L0,9 L0,0 Z"
                      Stretch="Uniform"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="2" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="MinimizeButtonDataTemplate">
        <Viewbox Width="25" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=ContentPresenter, Mode=FindAncestor}}">
            <Canvas Width="24" Height="24">
                <Path Width="14"
                      Height="14"
                      Data="M0,0 M8,0 M0,8 L8,8"
                      Stretch="Fill"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="2" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="RestoreButtonDataTemplate">
        <Viewbox Width="25" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=ContentPresenter, Mode=FindAncestor}}">
            <Canvas Width="24" Height="24">
                <Path Width="14"
                      Height="14"
                      Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z"
                      Stretch="Uniform"
                      Stroke="{Binding (TextElement.Foreground),
                                       RelativeSource={RelativeSource AncestorType=ContentPresenter,
                                                                      Mode=FindAncestor}}"
                      StrokeThickness="2" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="Home">
        <Viewbox Width="24" Height="24">
            <Canvas Width="24" Height="24">
                <Path Data="M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" Fill="White" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <Style x:Key="SeperatorStyle" TargetType="Rectangle">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Fill" Value="Gray" />
        <Setter Property="Opacity" Value="65" />
    </Style>

    <Style x:Key="ControlBoxButton" TargetType="Button">
        <Setter Property="Background" Value="{Binding Background, ElementName=titlebarControl, Mode=OneWay}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="{Binding Foreground, ElementName=titlebarControl, Mode=OneWay}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="MenuBorder"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsFocused" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat ComboBox  -->

    <Style x:Key="ComboBoxToggleButtonStyle"
           BasedOn="{StaticResource MaterialDesignComboBoxToggleButton}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border Name="Border"
                                Grid.ColumnSpan="2"
                                Background="#01FFFFFF"
                                BorderBrush="#444"
                                BorderThickness="1, 1, 1, 1"
                                CornerRadius="0" />
                        <Border Name="ButtonBorder"
                                Grid.Column="1"
                                Margin="1, 1, 1, 1"
                                Background="Transparent"
                                BorderBrush="#444"
                                BorderThickness="0, 0, 0, 0"
                                CornerRadius="0, 0, 0, 0" />

                        <Path Name="Arrow"
                              Grid.Column="1"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                              Fill="{Binding Path=Foreground,
                                             RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LanguageButtonStyle"
           BasedOn="{StaticResource MaterialDesignComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" MinWidth="15" />
                        </Grid.ColumnDefinitions>

                        <!--  Popup showing items  -->
                        <Popup Name="Popup"
                               Grid.ColumnSpan="2"
                               AllowsTransparency="False"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding Foreground}"
                                        BorderThickness="1" />
                                <ScrollViewer Margin="5,6,5,6"
                                              SnapsToDevicePixels="True"
                                              Style="{StaticResource MaterialDesignScrollViewer}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                        <TextBlock Name="ContentSite"
                                   Grid.Column="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Background="{TemplateBinding Background}"
                                   FontWeight="Normal"
                                   Foreground="{TemplateBinding Foreground}"
                                   IsHitTestVisible="True"
                                   OverridesDefaultStyle="True"
                                   Padding="10,0,2,0"
                                   Text="{TemplateBinding ComboBox.SelectionBoxItem}" />

                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen,
                                                          RelativeSource={RelativeSource TemplatedParent},
                                                          Mode=TwoWay}"
                                      Style="{StaticResource ComboBoxToggleButtonStyle}"
                                      ToolTip="{x:Static resx:Resources.Language_Tooltip}"
                                      Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <!--  End of Flat ComboBox  -->

    <Style x:Key="LoginButtonStyle"
           BasedOn="{StaticResource MaterialDesignComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinWidth" Value="34" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="ComboboxBorder"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="1"
                            CornerRadius="0, 0, 0, 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" MinWidth="20" />
                            </Grid.ColumnDefinitions>

                            <!--  Popup showing items  -->
                            <Popup Name="Popup"
                                   Grid.ColumnSpan="2"
                                   AllowsTransparency="False"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding Foreground}"
                                            BorderThickness="1" />
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </Grid>
                            </Popup>

                            <Button Name="ContentSite"
                                    Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    Command="{Binding LogInCommand}"
                                    Content="{Binding Path=LogInStatus}"
                                    FontWeight="Normal"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="True"
                                    OverridesDefaultStyle="True"
                                    Padding="10,0,0,0"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    ToolTip="{x:Static resx:Resources.LogIn_NotLoggedIn_Tooltip}" />

                            <ToggleButton Name="ToggleButton"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen,
                                                              RelativeSource={RelativeSource TemplatedParent},
                                                              Mode=TwoWay}"
                                          Style="{StaticResource ComboBoxToggleButtonStyle}"
                                          Visibility="Hidden">

                                <ToggleButton.ToolTip>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} {1}">
                                                <Binding Path="LogInStatus" />
                                                <Binding Source="{x:Static resx:Resources.LogIn_LoggedIn_Tooltip}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentSite" Property="Background" Value="Transparent" />
                            <Setter TargetName="ToggleButton" Property="Visibility" Value="{Binding IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ScrollViewer.xaml" />
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>
